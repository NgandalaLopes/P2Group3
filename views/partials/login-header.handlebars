  <nav class="navbar" role="navigation" aria-label="main navigation" style="margin-top: 15px !important;">
    <div class="navbar-brand">
      <a class="navbar-item" href="">
        <a href="/" title="Return to Homepage"><img src="./img/rsz_miso-anime-logo.png" height="80" alt="Return to Homepage"></a>
      </a>
  
      <a role="button" class="navbar-burger" aria-label="menu" aria-expanded="false" data-target="navbarBasicExample">
        <span aria-hidden="true"></span>
        <span aria-hidden="true"></span>
        <span aria-hidden="true"></span>
      </a>
    </div>
  
    <div id="navbarBasicExample" class="navbar-menu">
      <div class="navbar-start">
        <a class="navbar-item">
          Home
        </a>
  
        <a class="navbar-item">
          About
        </a>

      </div>
  
      <div class="navbar-end">
        <div class="navbar-item">
          <div class="buttons">
            <!----<a class="button is-primary" style="background-color: #316ef7;"><strong>Dashboard</strong></a>!-->
            <a href="/login" id="login-btn" class="button is-light">Login</a>
            <a href="/logout" id="logout-btn" class="button is-light">Logout </a>
          </div>
        </div>
      </div>
    </div>
  </nav>

  <script>
  const loginBtn = document.getElementById('login-btn');
  const logoutBtn = document.getElementById('logout-btn');
 
  // Add event listener to login button
  loginBtn.addEventListener('click', () => {
    // Set value in local storage
    localStorage.setItem('isLoggedIn', true);
  });
  // Add event listener to logout button
  logoutBtn.addEventListener('click', () => {
    // Remove value from local storage
    localStorage.removeItem('isLoggedIn');
  });
  // Check local storage value and hide/show buttons accordingly
  if (localStorage.getItem('isLoggedIn')) {
    loginBtn.style.display = 'none';
    logoutBtn.style.display = 'block';
  } else {
    loginBtn.style.display = 'block';
    logoutBtn.style.display = 'none';
  }


const dataContainer = document.getElementById('data-container');
axios.get('https://api.jikan.moe/v4/anime')

  .then(response => {
    const data = response.data;
    // Loop through the array of data and create an HTML template
    const html = `
      <ul>
        ${data.map(item => `<li>${item.name}: ${item.value}</li>`).join('')}
      </ul>
    `;
    // Append the HTML template to the container element
    dataContainer.innerHTML = html;
  })
  .catch(error => {
    console.error(error);
  });
</script>